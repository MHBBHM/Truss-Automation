{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPR6hBb5Hw0VuNeEbjggz4J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4yAkpS_cMamU","executionInfo":{"status":"ok","timestamp":1702891069549,"user_tz":-360,"elapsed":31574,"user":{"displayName":"Md Mehedi Hassan Bhuiyan","userId":"07726848509203097695"}},"outputId":"ced7345d-f5c0-45a5-f515-81a417ba49fb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting calfem-python\n","  Downloading calfem_python-3.6.5-py3-none-any.whl (207 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/207.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m61.4/207.2 kB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.2/207.2 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from calfem-python) (1.23.5)\n","Collecting visvis (from calfem-python)\n","  Downloading visvis-1.14.0-py3-none-any.whl (4.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.9/4.9 MB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pyvtk (from calfem-python)\n","  Downloading PyVTK-0.5.18.zip (31 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from calfem-python) (3.7.1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from calfem-python) (1.11.4)\n","Collecting gmsh (from calfem-python)\n","  Downloading gmsh-4.11.1-py2.py3-none-manylinux1_x86_64.whl (38.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m38.8/38.8 MB\u001b[0m \u001b[31m12.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting qtpy (from calfem-python)\n","  Downloading QtPy-2.4.1-py3-none-any.whl (93 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m93.5/93.5 kB\u001b[0m \u001b[31m6.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting vedo (from calfem-python)\n","  Downloading vedo-2023.5.0.tar.gz (2.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.7/2.7 MB\u001b[0m \u001b[31m33.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.10/dist-packages (from calfem-python) (0.9.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (4.46.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (23.2)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->calfem-python) (2.8.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyvtk->calfem-python) (1.16.0)\n","Collecting vtk (from vedo->calfem-python)\n","  Downloading vtk-9.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (92.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m92.0/92.0 MB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting Deprecated (from vedo->calfem-python)\n","  Downloading Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)\n","Requirement already satisfied: Pygments in /usr/local/lib/python3.10/dist-packages (from vedo->calfem-python) (2.16.1)\n","Requirement already satisfied: pyOpenGl in /usr/local/lib/python3.10/dist-packages (from visvis->calfem-python) (3.1.7)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.10/dist-packages (from Deprecated->vedo->calfem-python) (1.14.1)\n","Building wheels for collected packages: pyvtk, vedo\n","  Building wheel for pyvtk (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyvtk: filename=PyVTK-0.5.18-py3-none-any.whl size=24735 sha256=16b1f7234f27ee524b1dd7b47c0f191180b8f5680fc9ec88337762b84d306825\n","  Stored in directory: /root/.cache/pip/wheels/4e/e6/8b/58fdf3a1ffab592ded0e0ab8cc64e889dc3377a7a31d6174bc\n","  Building wheel for vedo (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for vedo: filename=vedo-2023.5.0-py3-none-any.whl size=2781551 sha256=e3b78a0eb6159fd1e7de51b21352f03c2998051e38d9a963e3480dd2ce97815b\n","  Stored in directory: /root/.cache/pip/wheels/94/55/e2/c6dd95029c334b1ad9b784de187bd01c9843a380ebeff19ece\n","Successfully built pyvtk vedo\n","Installing collected packages: gmsh, visvis, qtpy, pyvtk, Deprecated, vtk, vedo, calfem-python\n","Successfully installed Deprecated-1.2.14 calfem-python-3.6.5 gmsh-4.11.1 pyvtk-0.5.18 qtpy-2.4.1 vedo-2023.5.0 visvis-1.14.0 vtk-9.3.0\n"]}],"source":["!pip install calfem-python"]},{"cell_type":"code","source":["import numpy as np\n","import calfem.core as cfc\n","\n","e = int(input(\"Enter the number of Elements: \"))\n","n = int(input(\"Enter the number of Nodes: \"))\n","K = np.zeros((n, n))\n","f = np.zeros((n, 1))\n","Edof = np.zeros((e, 4), dtype=int)\n","ex = np.zeros((e, 2), dtype=int)\n","ey = np.zeros((e, 2), dtype=int)\n","ep = np.zeros((e, 2), dtype=int)\n","\n","# Getting input for node to node history\n","for i in range(e):\n","    val_1 = int(input(f\"Enter initial node number for x direction of bar element {i + 1} = \"))\n","    val_2 = int(input(f\"Enter initial node number for y direction of bar element {i + 1} = \"))\n","    val_3 = int(input(f\"Enter final node number for x direction of bar element {i + 1} = \"))\n","    val_4 = int(input(f\"Enter final node number for y direction of bar element {i + 1} = \"))\n","    print(\"\")\n","    Edof[i] = [val_1, val_2, val_3, val_4]\n","\n","for i in range(e):\n","    x1 = float(input(f\"Enter bar element {i+1} initial coordinate for x direction as 'mm' = \"))\n","    y1 = float(input(f\"Enter bar element {i+1} initial coordinate for y direction as 'mm' = \"))\n","    x2 = float(input(f\"Enter bar element {i+1} final coordinate for x direction as 'mm' = \"))\n","    y2 = float(input(f\"Enter bar element {i+1} final coordinate for y direction as 'mm' = \"))\n","    A = float(input(f\"Enter bar element {i+1} Area  as 'mm\\u00B2' = \"))\n","    E = float(input(f\"Enter bar element {i+1} Elastic Modulus as 'GPa' = \"))\n","    print(\"\")\n","    ex[i] = [x1, x2]\n","    ey[i] = [y1, y2]\n","    ep[i] = [E, A]\n","\n","for elx, ely, eltopo, elep in zip(ex, ey, Edof, ep):\n","    E, A = elep  # Unpack E and A from elep\n","    Ke = cfc.bar2e(elx, ely, [E, A])  # Pass E and A separately\n","    cfc.assem(eltopo, K, Ke)\n","\n","for i in range(n):\n","    a = float(input(f\"Enter node {i + 1} force as 'kN' = \"))\n","    f[i] = a\n","\n","print(\"\")\n","\n","b = int(input(\"Enter the number of fixed degree of freedom = \"))\n","\n","print(\"\")\n","\n","bc = np.zeros(b, dtype=int)\n","\n","for i in range(b):\n","    element = int(input(f\"Enter support {i + 1} node number = \"))\n","    bc[i] = element\n","\n","U,F =cfc.solveq(K,f,bc)\n","\n","print(f\"\\nGlobal Stiffness Matrix\\n\\n{K}\\n\\nForce Vector\\n\\n{f}\\n\\nDisplacement (mm)\\n\\n{np.around(U, decimals=3)}\\n\\nForce (kN)\\n\\n{np.around(F, decimals=3)}\\n\")\n","\n","for i, elx, ely, eltopo, elep in zip(range(e), ex, ey, Edof, ep):\n","    E, A = elep\n","    N = cfc.bar2s(elx, ely, [E, A], cfc.extract_eldisp(eltopo, U))\n","    stress_value = np.around(N[0, 0], decimals=3)\n","\n","    if stress_value < 0:\n","        print(f\"Stress of element bar {i+1} = {stress_value} GPa (Compression bar)\")\n","    else:\n","        print(f\"Stress of element bar {i+1} = {stress_value} GPa (Tension bar)\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vT7yCaMnPxHS","executionInfo":{"status":"ok","timestamp":1702891926631,"user_tz":-360,"elapsed":119618,"user":{"displayName":"Md Mehedi Hassan Bhuiyan","userId":"07726848509203097695"}},"outputId":"dc864f37-6e2f-45ec-f0f5-64f0a782ac36"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number of Elements: 3\n","Enter the number of Nodes: 8\n","Enter initial node number for x direction of bar element 1 = 1\n","Enter initial node number for y direction of bar element 1 = 2\n","Enter final node number for x direction of bar element 1 = 5\n","Enter final node number for y direction of bar element 1 = 6\n","\n","Enter initial node number for x direction of bar element 2 = 5\n","Enter initial node number for y direction of bar element 2 = 6\n","Enter final node number for x direction of bar element 2 = 7\n","Enter final node number for y direction of bar element 2 = 8\n","\n","Enter initial node number for x direction of bar element 3 = 3\n","Enter initial node number for y direction of bar element 3 = 4\n","Enter final node number for x direction of bar element 3 = 5\n","Enter final node number for y direction of bar element 3 = 6\n","\n","Enter bar element 1 initial coordinate for x direction as 'mm' = 0\n","Enter bar element 1 initial coordinate for y direction as 'mm' = 0\n","Enter bar element 1 final coordinate for x direction as 'mm' = 1600\n","Enter bar element 1 final coordinate for y direction as 'mm' = 0\n","Enter bar element 1 Area  as 'mm²' = 600\n","Enter bar element 1 Elastic Modulus as 'GPa' = 200\n","\n","Enter bar element 2 initial coordinate for x direction as 'mm' = 1600\n","Enter bar element 2 initial coordinate for y direction as 'mm' = 0\n","Enter bar element 2 final coordinate for x direction as 'mm' = 1600\n","Enter bar element 2 final coordinate for y direction as 'mm' = 1200\n","Enter bar element 2 Area  as 'mm²' = 300\n","Enter bar element 2 Elastic Modulus as 'GPa' = 200\n","\n","Enter bar element 3 initial coordinate for x direction as 'mm' = 0\n","Enter bar element 3 initial coordinate for y direction as 'mm' = 1200\n","Enter bar element 3 final coordinate for x direction as 'mm' = 1600\n","Enter bar element 3 final coordinate for y direction as 'mm' = 0\n","Enter bar element 3 Area  as 'mm²' = 1000\n","Enter bar element 3 Elastic Modulus as 'GPa' = 200\n","\n","Enter node 1 force as 'kN' = 0\n","Enter node 2 force as 'kN' = 0\n","Enter node 3 force as 'kN' = 0\n","Enter node 4 force as 'kN' = 0\n","Enter node 5 force as 'kN' = 0\n","Enter node 6 force as 'kN' = -80\n","Enter node 7 force as 'kN' = 0\n","Enter node 8 force as 'kN' = 0\n","\n","Enter the number of fixed degree of freedom = 6\n","\n","Enter support 1 node number = 1\n","Enter support 2 node number = 2\n","Enter support 3 node number = 3\n","Enter support 4 node number = 4\n","Enter support 5 node number = 7\n","Enter support 6 node number = 8\n","\n","Global Stiffness Matrix\n","\n","[[ 75.   0.   0.   0. -75.   0.   0.   0.]\n"," [  0.   0.   0.   0.   0.   0.   0.   0.]\n"," [  0.   0.  64. -48. -64.  48.   0.   0.]\n"," [  0.   0. -48.  36.  48. -36.   0.   0.]\n"," [-75.   0. -64.  48. 139. -48.   0.   0.]\n"," [  0.   0.  48. -36. -48.  86.   0. -50.]\n"," [  0.   0.   0.   0.   0.   0.   0.   0.]\n"," [  0.   0.   0.   0.   0. -50.   0.  50.]]\n","\n","Force Vector\n","\n","[[  0.]\n"," [  0.]\n"," [  0.]\n"," [  0.]\n"," [  0.]\n"," [-80.]\n"," [  0.]\n"," [  0.]]\n","\n","Displacement (mm)\n","\n","[[ 0.   ]\n"," [ 0.   ]\n"," [ 0.   ]\n"," [ 0.   ]\n"," [-0.398]\n"," [-1.152]\n"," [ 0.   ]\n"," [ 0.   ]]\n","\n","Force (kN)\n","\n","[[ 29.845]\n"," [  0.   ]\n"," [-29.845]\n"," [ 22.383]\n"," [  0.   ]\n"," [  0.   ]\n"," [  0.   ]\n"," [ 57.617]]\n","\n","Stress of element bar 1 = -29.845 GPa (Compression bar)\n","Stress of element bar 2 = 57.617 GPa (Tension bar)\n","Stress of element bar 3 = 37.306 GPa (Tension bar)\n"]}]}]}